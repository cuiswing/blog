<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

    <context:component-scan base-package="com.cui.blog.web.controller"/>
    <context:component-scan base-package="com.cui.blog.biz.service.impl"/>
    <context:component-scan base-package="com.cui.blog.web.task"/>

    <context:property-placeholder location="classpath:blog.properties"/>

    <!-- 配置静态资源，直接映射到对应的文件夹，不被DispatcherServlet处理 -->
    <mvc:annotation-driven/>
    <mvc:resources mapping="/css/**" location="/static/css/"/>
    <mvc:resources mapping="/js/**" location="/static/js/"/>
    <mvc:resources mapping="/img/**" location="/static/img/"/>

    <!-- 配置velocity引擎-->
    <bean id="velocityConfigurer" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
        <property name="resourceLoaderPath" value="/WEB-INF/view"/>
        <property name="configLocation" value="/WEB-INF/config/velocity.properties"/>
    </bean>

    <!-- 配置视图的显示 -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver">
        <property name="order" value="1"/>
        <property name="cache" value="false"/>
        <property name="prefix" value="page/"/><!-- 视图文件的前缀，即存放的路径 -->
        <property name="suffix" value=".vm"/><!-- 视图文件的后缀名 -->
        <property name="contentType" value="text/html;charset=UTF-8"/>
        <property name="layoutUrl" value="layout/default.vm"/><!--指定layout文件，相对于resourceLoaderPath目录下-->
        <property name="toolboxConfigLocation" value="/WEB-INF/config/toolbox.xml"/> <!--toolbox配置文件路径-->
        <property name="dateToolAttribute" value="date"/><!--日期函数名称 -->
        <property name="numberToolAttribute" value="number"/><!--数字函数名称 -->
        <property name="exposeSpringMacroHelpers" value="true"/><!--是否使用spring对宏定义的支持 -->
        <property name="exposeRequestAttributes" value="true"/><!--是否开放request属性 -->
        <property name="requestContextAttribute" value="rc"/><!--request属性引用名称 -->
        <!--<property name="attributesMap">&lt;!&ndash;自定义属性，可在页面中直接使用该对象的方法&ndash;&gt;-->
        <!--<map>-->
        <!--<entry key="sec">-->
        <!--<bean class="com.cui.blog.web.utils.ContextUtils"/>-->
        <!--</entry>-->
        <!--</map>-->
        <!--</property>-->
    </bean>

    <!-- 配置MultipartResolver 用于文件上传 使用spring的CommosMultipartResolver -->
    <!--设置最大上传文件大小 10M=10*1024*1024(B)=10485760 bytes-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="utf-8"></property>
        <property name="maxUploadSize" value="10485760"></property>
    </bean>

    <task:annotation-driven executor="myExecutor" scheduler="myScheduler"/>
    <task:executor id="myExecutor" pool-size="5"/>
    <task:scheduler id="myScheduler" pool-size="10"/>

</beans>